import sqlmodel

"""refactored Message Class

Revision ID: 9907c93ab706
Revises: c7b3e89ca7d4
Create Date: 2025-04-26 16:28:47.565533

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "9907c93ab706"
down_revision: Union[str, None] = "c7b3e89ca7d4"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "message",
        sa.Column("user_query", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    )
    op.add_column(
        "message",
        sa.Column("ai_response", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    )
    op.add_column("message", sa.Column("evaluation", sa.Integer(), nullable=False))
    op.alter_column(
        "message",
        "telegram_id",
        existing_type=sa.BIGINT(),
        type_=sa.Integer(),
        existing_nullable=False,
    )
    op.drop_column("message", "message")
    op.drop_column("message", "response_entity")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "message",
        sa.Column(
            "response_entity",
            postgresql.ENUM("USER", "BOT", name="responseentity"),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "message",
        sa.Column("message", sa.VARCHAR(), autoincrement=False, nullable=False),
    )
    op.alter_column(
        "message",
        "telegram_id",
        existing_type=sa.Integer(),
        type_=sa.BIGINT(),
        existing_nullable=False,
    )
    op.drop_column("message", "evaluation")
    op.drop_column("message", "ai_response")
    op.drop_column("message", "user_query")
    # ### end Alembic commands ###
