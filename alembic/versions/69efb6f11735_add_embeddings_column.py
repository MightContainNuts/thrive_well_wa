import sqlmodel

"""Add embeddings column

Revision ID: 69efb6f11735
Revises: 72c42a9e18de
Create Date: 2025-04-26 20:02:57.451776

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects.postgresql import BIGINT
import pgvector


# revision identifiers, used by Alembic.
revision: str = "69efb6f11735"
down_revision: Union[str, None] = "72c42a9e18de"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    # First, drop the foreign key constraint on message
    op.drop_constraint("message_telegram_id_fkey", "message", type_="foreignkey")

    # Now drop the unique constraint on user.telegram_id
    op.drop_constraint("user_telegram_id_key", "user", type_="unique")

    # Alter the telegram_id column to be nullable
    op.alter_column("message", "telegram_id", existing_type=sa.BIGINT(), nullable=True)

    # Add the new embeddings column
    op.add_column(
        "message",
        sa.Column(
            "embeddings", pgvector.sqlalchemy.vector.VECTOR(dim=384), nullable=True
        ),
    )

    # Recreate the unique constraint on user.telegram_id (this must be in place before the foreign key)
    op.create_unique_constraint("user_telegram_id_key", "user", ["telegram_id"])

    # Now, re-create the foreign key with the updated constraints
    op.create_foreign_key(None, "message", "user", ["telegram_id"], ["telegram_id"])

    # Create index for telegram_id in message
    op.create_index(
        op.f("ix_message_telegram_id"), "message", ["telegram_id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint("user_telegram_id_key", "user", ["telegram_id"])
    op.drop_constraint(None, "message", type_="foreignkey")
    op.create_foreign_key(
        "message_telegram_id_fkey",
        "message",
        "user",
        ["telegram_id"],
        ["telegram_id"],
        ondelete="CASCADE",
    )
    op.drop_index(op.f("ix_message_telegram_id"), table_name="message")
    op.alter_column("message", "telegram_id", existing_type=sa.BIGINT(), nullable=False)
    op.drop_column("message", "embeddings")
    # ### end Alembic commands ###
