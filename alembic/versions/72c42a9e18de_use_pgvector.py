import sqlmodel
from pgvector.sqlalchemy import Vector

"""use pgvector

Revision ID: 72c42a9e18de
Revises: 332883e61b60
Create Date: 2025-04-26 19:53:48.202868

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "72c42a9e18de"
down_revision: Union[str, None] = "332883e61b60"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("message_telegram_id_fkey", "message", type_="foreignkey")

    # Then drop unique constraint
    op.drop_constraint("user_telegram_id_key", "user", type_="unique")

    # Recreate unique constraint
    op.create_unique_constraint("user_telegram_id_key", "user", ["telegram_id"])

    # Recreate foreign key
    op.create_foreign_key(
        "message_telegram_id_fkey",
        "message",
        "user",
        ["telegram_id"],
        ["telegram_id"],
        ondelete="CASCADE",
    )


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint("user_telegram_id_key", "user", ["telegram_id"])
    op.drop_index(op.f("ix_message_telegram_id"), table_name="message")
    op.drop_column("message", "embeddings")
    # ### end Alembic commands ###
